---
// Destructure the properties from Astro.props
const { url, name } = Astro.props;

// Define TypeScript interface for the properties
interface Props {
  url: string;
  name: string;
}

// Get current pathname
const currentPath = Astro.url.pathname;

// Check if this link is active
const isActive = currentPath === url;
---

<!--
Re-usable link component for navigation bar. Highlights the active link
by comparing the current URL with the href of each link.
We assign an ID matching the URL for easy reference in our script.
If URL is '/' (home page), assign ID as 'home'
-->
<a
  id={url === "/" ? "home" : url.replace("/", "").replace("#", "")}
  href={url}
  data-astro-prefetch
  class={`nav-link rounded-lg text-base font-medium outline-hidden ring-zinc-500 focus-visible:ring-3 md:py-3 md:text-sm 2xl:text-base transition-all duration-200 ${
    isActive
      ? "text-white font-semibold bg-primary px-3 py-2 shadow-md dark:text-primary dark:bg-transparent dark:shadow-none"
      : "text-neutral-600 hover:text-neutral-500 hover:bg-neutral-100 dark:text-neutral-400 dark:ring-zinc-200 dark:hover:text-neutral-500 dark:hover:bg-neutral-800 dark:focus:outline-hidden"
  }`}
>
  {name}
</a>
